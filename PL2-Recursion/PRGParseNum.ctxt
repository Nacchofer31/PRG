#BlueJ class context
comment0.params=c
comment0.target=int\ parseDig(char)
comment0.text=\r\n\ Devuelve\ el\ entero\ asociado\ al\ car\u00E1cter\ d\u00EDgito\ en\ c.\r\n\ @param\ c\:\ char.\r\n\ @return\ int\:\ valor\ del\ d\u00EDgito.\r\n\ PRECONDICI\u00D3N\:\ '9'\ >\=\ c\ >\=\ '0'\r\n
comment1.params=s
comment1.target=int\ sumaDigitos(java.lang.String)
comment1.text=\ Devuelve\ la\ suma\ de\ los\ d\u00EDgitos\ contenidos\ en\ una\ String.\r\n\ @param\ s\ String\ s\:\ Cadena\ de\ caracteres\ sobre\ los\ que\ se\ opera.\r\n@return\ int.
comment2.params=s\ pos
comment2.target=int\ sumaDigitos(java.lang.String,\ int)
comment2.text=\ Devuelve\ la\ suma\ de\ los\ d\u00EDgitos\ contenidos\ en\ una\ String.\r\n\ Versi\u00F3n\ alternativa\ utilizando\ un\ par\u00E1metro\ posicional.\r\n\ @param\ s\ String\ s\:\ Cadena\ de\ caracteres\ sobre\ los\ que\ se\ opera.\r\n\ @param\ pos\:\ posici\u00F3n\ sobre\ la\ que\ se\ est\u00E1\ trabajando\ en\ s.\r\n@return\ int.
comment3.params=s
comment3.target=int\ sumaDigitos2(java.lang.String)
comment3.text=\ Devuelve\ la\ suma\ de\ los\ d\u00EDgitos\ contenidos\ en\ una\ String.\r\n\ @param\ s\ String\ s\:\ Cadena\ de\ caracteres\ sobre\ los\ que\ se\ opera.\r\n@return\ int.
comment4.params=s
comment4.target=int\ parseUnsignedInt(java.lang.String)
comment4.text=\ \r\n\ EJEMPLO,\ "1234",\ con\ analisis\ DESCENDENTE\:\r\n\ \ \ s\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ s.charAt(s.length()-1)-'0'\ \ \ \r\n\ "1234"\ \ \ \ \ \ 123*10\ \ \ +\ \ \ \ \ \ \ \ 4\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ 1234\ \r\n\ "123"\ \ \ \ \ \ \ 12*10\ \ \ \ +\ \ \ \ \ \ \ \ 3\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ \ 123\ \r\n\ "12"\ \ \ \ \ \ \ \ 1*10\ \ \ \ \ +\ \ \ \ \ \ \ \ 2\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ \ \ 12\ \r\n\ "1"\ \ \ \ \ \ \ \ \ 1\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ \ \ \ 1\ \r\n\ \r\n\ \r\n\ EJEMPLO,\ "1234",\ con\ analisis\ ASCENDENTE\:\r\n\ \ \ s\ \ \ \ s.charAt(0)-'0'\ \ \ \ Math.pow(10,s.length()-1)\r\n\ "1234"\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ 10^3\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ 1000\ +\r\n\ \ "234"\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ 10^2\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ \ 200\ +\r\n\ \ \ "34"\ \ \ \ \ \ \ 3\ \ \ \ \ \ \ \ \ *\ \ \ \ \ \ \ \ \ 10^1\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ \ \ 30\ +\r\n\ \ \ \ "4"\ \ \ \ \ \ \ 4\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \=\ \ \ \ 4\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ _____\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 1234\ \ \ \ \r\n\ \ \r\n\ PRECONDICI\u00D3N\:\ s\ contiene\ un\ entero,\ >\=\ 0,\ bien\ formado.\ \r\n
comment5.params=s
comment5.target=int\ parseInt(java.lang.String)
comment5.text=\ \r\n\ PRECONDICI\u00D3N\:\ s\ contiene\ un\ entero,\ tal\ vez\ con\ signo,\ bien\ formado.\ \r\n
comment6.params=s
comment6.target=int\ posFracSep(java.lang.String)
comment6.text=\r\n\ PRECONDICI\u00D3N\:\ s\ contiene\ un\ n\u00FAmero\ en\ coma\ flotante\ bien\ formado.\ \r\n
comment7.params=s
comment7.target=double\ parseFrac(java.lang.String)
comment7.text=\ \r\n\ PRECONDICI\u00D3N\:\ s,\ contiene\ los\ d\u00EDgitos\ de\ la\ parte\ fraccionaria\r\n\ de\ un\ valor\ double\ bien\ formado.\ \r\n
comment8.params=s
comment8.target=double\ parseDouble(java.lang.String)
comment8.text=\ \r\n\ PRECONDICI\u00D3N\:\ s\ contiene\ un\ double,\ bien\ formado,\ tal\ vez\ con\ signo,\ \r\n\ que\ puede\ tener\ (o\ no)\ parte\ fraccionaria.\ No\ contiene\ parte\ exponencial.\r\n
numComments=9
